#!/bin/bash
# Script to automate adding new roms to existing rom folders
# $1 = console, such as psx, n64, etc
if grep -qs "$HOME/mnt/Games" /proc/mounts
then
    echo "NAS already mounted."
else
  sudo mount -v -t cifs '//192.168.1.77/gamer'  ~/mnt/Games -o user=lolguest,vers=2.0,ro
  if grep -qs "$HOME/mnt/Games" /proc/mounts
  then 
      echo "NAS mounted."
  else
      echo "NAS mount error"
      exit
  fi
fi

workingDir=~/ROMs/"$1" 
pushd "$workingDir" || exit

if [ ! -d "$workingDir" ]
then
  echo "The rom folder on localhost doesn't exist. Ensure folder names allign."
  exit 1
fi

#Confirm rom folder names match
if [ ! -d ~/mnt/Games/Roms/"$1" ]
then
  echo "The rom folder on NAS doesn't exist. Ensure folder names allign."
  exit 1
else
  echo "The rom folder on NAS was detected."
  rsync -avz --info=progress2 ~/mnt/Games/Roms/"$1"/ "$workingDir" --delete

  pushd "$workingDir" || exit
  Skyscraper -p "$1" -s esgamelist -i "$workingDir" --flags videos,relative,nosubdirs,unattend --refresh
  #Skyscraper -p "$1" -s esgamelist -i "$workingDir" --flags videos,relative,nosubdirs,unattend --refresh --addext "*.wua"

  #Creds are in config and NAS folder was originally scanned via screenscraper so there should be no additions
  #This helps get age ratings and stuff
  Skyscraper -p "$1" -s screenscraper -i "$workingDir" --flags noscreenshots,nocovers,nowheels,nomarquees,nosubdirs,unattend
  #Skyscraper -p "$1" -s screenscraper -i "$workingDir" --flags noscreenshots,nocovers,nowheels,nomarquees,nosubdirs,unattend --addext "*.wua"
  Skyscraper -p "$1" -s thegamesdb -i "$workingDir" --flags nosubdirs,unattend
  #Skyscraper -p "$1" -s thegamesdb -i "$workingDir" --flags nosubdirs,unattend --addext "*.wua"

  #May need to add additional Skyscraper commands for retro systems
  #Skycraper blah blah retro

  #Generate new gamelist with ratings and any additional stuff
  Skyscraper -p "$1" -i "$workingDir" --flags unattend,relative
  #Skyscraper -p "$1" -i "$workingDir" --flags unattend --addext "*.wua"

  #Create ES gamelist folder if it doesn't exist
  if [ ! -d ~/ES-DE/gamelists/"$1" ]
  then
    mkdir ~/ES-DE/gamelists/"$1"
    echo "Created ~/ES-DE/gamelists/$1"
  fi

  #Merge new entires into ES gamelist and backup old list
  pushd ~/ES-DE/gamelists/"$1" || exit
  cp gamelist.xml gamelist-backup.xml
  rsync "$workingDir"/gamelist.xml gamelist.xml

  #Return to 0merge
  popd || exit

  #Move media files from 0merge to ES media
  #Create ES media folder if it doesn't exist
  if [ ! -d ~/ES-DE/downloaded_media/"$1" ]
  then
    mkdir ~/ES-DE/downloaded_media/"$1"
    echo "Created ~/ES-DE/downloaded_media/$1"
  fi
  
  #ESDE-media-move.sh
  #convert to for loop
  rsync "$workingDir"/media/box2dback/ ~/ES-DE/downloaded_media/"$1"/backcovers
  rsync -avz --info=progress2 "$workingDir"/media/box2dfront/ ~/ES-DE/downloaded_media/"$1"/covers
  rsync -avz --info=progress2 "$workingDir"/media/box3d/ ~/ES-DE/downloaded_media/"$1"/3dboxes
  rsync -avz --info=progress2 "$workingDir"/media/fanart/ ~/ES-DE/downloaded_media/"$1"/fanart
  rsync -avz --info=progress2 "$workingDir"/media/images/ ~/ES-DE/downloaded_media/"$1"/miximages
  rsync -avz --info=progress2 "$workingDir"/media/manual/ ~/ES-DE/downloaded_media/"$1"/manuals
  rsync -avz --info=progress2 "$workingDir"/media/screenshot/ ~/ES-DE/downloaded_media/"$1"/screenshots
  rsync -avz --info=progress2 "$workingDir"/media/screenshottitle/ ~/ES-DE/downloaded_media/"$1"/titlescreens
  rsync -avz --info=progress2 "$workingDir"/media/support/ ~/ES-DE/downloaded_media/"$1"/physicalmedia
  rsync -avz --info=progress2 "$workingDir"/media/videos/ ~/ES-DE/downloaded_media/"$1"/videos
  rsync -avz --info=progress2 "$workingDir"/media/wheel/ ~/ES-DE/downloaded_media/"$1"/marquees
  
  #Clean up unneeded files
  #not using $workDir to avoid accidental rm -rf
  rm -rf ~/ROMs/"$1"/media
  rm -f ~/ROMs/"$1"/gamelist.*
  
  #Backup emulationstation dir
  echo "Run tar backup and temporarily disable suspending/hibernating mid process"
  sudo systemd-inhibit nohup tar -cJvf ~/ESDE-backup.tar.xz ~/ES-DE &>/dev/null &
fi
